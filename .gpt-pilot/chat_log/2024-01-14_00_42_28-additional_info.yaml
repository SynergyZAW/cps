endpoint: OPENAI
model: gpt-4-1106-preview
messages:
- role: system
  content: You are an experienced project owner (project manager) who manages the entire process of creating software applications
    for clients from the client specifications to the development. You act as if you are talking to the client who wants his
    idea about a software application created by you and your team. You always think step by step and ask detailed questions
    to completely understand what does the client want and then, you give those specifications to the development team who
    creates the code for the app. Any instruction you get that is labeled as **IMPORTANT**, you follow strictly.
- role: user
  content: 'I want you to create the App (let''s call it "ABM") that can be described like this:

    ```

    Development of a Basic ABM for Testing Purposes


    Introduction


    We are initiating a project to develop a basic Agent-Based Model (ABM) that simulates key aspects of the South African
    cannabis and hemp industry. The primary goal is to test our development team''s ability to create a functional, simple
    application using Streamlit.

    ABM Requirements


    Agents:


    Include two types of agents: Farmers (formal and informal) and Regulators.

    Farmers have basic attributes such as production capacity and compliance status.

    Regulators influence market conditions and policies.

    Interactions:


    Farmers respond to market conditions (like demand and pricing).

    Regulators implement policies affecting farmer operations.

    Simplicity:


    Focus on basic functionalities. Avoid complex modeling at this stage.

    The model should run a simple simulation based on predefined rules.

    Streamlit Interface


    User Input:


    Allow users to input basic parameters such as market demand and regulatory conditions.

    Include sliders or input fields for these parameters.

    Simulation Control:


    Implement start, stop, and reset controls for the simulation.

    Data Visualization:


    Display basic results of the simulation using simple graphs or tables.

    Focus on key outputs like total production and compliance levels.

    Feedback Mechanism:


    Provide a way for users to give feedback on the app functionality.

    Development Guidelines


    Keep the codebase clean and well-documented.

    Ensure the application is user-friendly and intuitive.

    Prioritize quick loading times and smooth interaction.

    Future Considerations


    While this is a basic version, design with scalability in mind. We plan to enhance the model and interface with more complex
    features in future iterations.

    Conclusion


    This project serves as a foundational step towards a comprehensive ABM. We are keen to assess the team''s ability to develop
    a functional and user-friendly application using Streamlit.

    We look forward to seeing a prototype and will provide further guidance based on the initial build.

    ```'
- role: system
  content: 'I''m going to show you an overview of tasks that you need to do to lead the process of creating this App and for
    each task, I will tell you an example of how would you solve this task for the example app.

    Example app description: `Create a script that finds Youtube channels with the word "test" inside the channel name`.


    Here is an overview of the tasks that you need to do:


    1. Getting additional answers. In this task, you think from a high level perspective and ask if anything is unclear in
    regards to the description that I''ve given to you. You don''t need to ask every single detail to cover all possible edge
    cases but only questions that might be relevant to ask upon first touch with the client. I will answer any questions you
    list here so you have a better understanding of the app that needs to be built. In the example description, you could
    ask the following questions:

    - `do you want to enable user to be able to specify different word to search for in channel name?`

    - `do you want to save the results in a CSV file on the disk?`


    2. Break down user stories. In this task, you will think about the App description and the answers from step #1 and create
    a list of all user stories. A user story is a description of how a user can interact with the App. In the example description,
    user stories could be:

    - `user will run the script from the CLI`

    - `user will get the list of all channels in a CSV file`


    3. Break down user tasks. In this task, you will think about the App description, answers from step #1 and the user stories
    from the step #2 and create a list of user tasks that a user needs to do to interact with the App. In the example description,
    user tasks could be:

    - `user runs the CLI command in which they specify the keyword youtube channel needs to contain and the location where
    the CSV file will be saved to`


    Let''s start with the task #1 Getting additional answers. Think about the description for the App "ABM" and ask questions
    that you would like to get cleared before going onto breaking down the user stories.


    **IMPORTANT**

    Do not use, create or suggest any microservices. Create strictly monolithic application even if in some prompts I might
    suggest microservices might be better or more desired solution. Do your best to find a solution to any requirement without
    using microservices.


    **IMPORTANT**

    Here are the instructions for Asking Additional Questions:


    Direct Questions Only: If there are any points that are not clear, you should draft direct questions to clarify them.
    Do not include any preamble, gratitude expressions, or background when posing these questions.


    Concise and Focused: Each question should be concise and focus on one aspect of the project. Do not merge multiple queries
    into a single question, as this can cause confusion.


    No Lead-ins or Conclusions: After receiving an answer to a question, proceed directly to the next question without adding
    any thank yous, recaps, or segues.


    Neutral Tone: Ensure that your questions are neutral and don''t imply any assumptions. The objective is to gather information,
    not to lead the respondent in any particular direction.


    Examples:

    Instead of "Thank you for that information. My next question is: Should A be bigger than B?", simply ask "Should A be
    bigger than B?".

    Instead of "Based on what you said earlier, do we need to prioritize X over Y?", just ask "Do we need to prioritize X
    over Y?".


    Remember: The goal is to extract precise information without adding any unnecessary dialogue. Your questions should be
    straightforward and to the point.


    I want your response to be only one question at a time. I will ask you again when I am ready for next question.


    Ask maximum of 5 questions and after that I want you to respond with "EVERYTHING_CLEAR".


    If everything is clear before asking those 5 questions, you write the response in the following format:

    "EVERYTHING_CLEAR"'
response: What simulation time frame should the ABM cover for each run (e.g., one month, one year)?
