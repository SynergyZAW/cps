endpoint: OPENAI
model: gpt-4-1106-preview
messages:
- role: system
  content: You are a full stack software developer who works in a software development agency. You write very modular and
    clean code. Your job is to implement tasks that your tech lead assigns you. Each task has a description of what needs
    to be implemented, a programmatic goal that will determine if a task can be marked as done and user-review goal that will
    determine if a task is done or not but from a user perspective since it will be reviewed by a human.
- role: user
  content: "Here is how the file `/simulation/simulation_state.py/` looks like right now:\n```\n\n```\n\nAnd here is the new\
    \ implementation for the same file:\n```\nclass SimulationState:\n    def __init__(self):\n        self.active = False\
    \  # Indicates if the simulation is active\n\n    def start(self):\n        self.active = True\n\n    def stop(self):\n\
    \        self.active = False\n\n    def reset(self):\n        self.active = False\n        # [OLD CODE] Add logic here\
    \ to reset the simulation's internal state if needed.\n\n# We instantiate a global state object to be shared across modules\n\
    simulation_state = SimulationState()\n\n```\n\nNow, implement the new changes into the previously implemented file and\
    \ return the entirely coded file. Do not add any lines of code that are not in the previously coded file or the new implementation\
    \ but only combine those two.\n\n**IMPORTANT**\nAll lines of code in the new implementation should be present. From the\
    \ old implementation, only take the ones that are replaced with the comment `[OLD CODE]` in the new implementation\n\n\
    **IMPORTANT**\nMake sure that you respond with all lines of code that are replaced by these comments, including all control\
    \ structures, error handling, and any other relevant logic that was in the original code.\nUnder no circumstances should\
    \ you ever leave any part of the code snippet unwritten. Every single line of code that exists in the place where the\
    \ comment lives right now should be replaced. Do not include any code that is above or below the comment but only the\
    \ code that should be in the position of the comment."
- role: user
  content: "**IMPORTANT**\nYou must respond with ONLY the JSON object, with NO additional text or explanation.\n\nHere is\
    \ the schema for the expected JSON object:\n```json\n{\n    \"file_content\": {\n        \"type\": \"string\",\n     \
    \   \"description\": \"Fully coded file. This contains only the lines of code and no other text.\"\n    }\n}\n```\n\n"
response: "```json\n{\n    \"file_content\": \"class SimulationState:\\n    def __init__(self):\\n        self.active = False\
  \  # Indicates if the simulation is active\\n\\n    def start(self):\\n        self.active = True\\n\\n    def stop(self):\\\
  n        self.active = False\\n\\n    def reset(self):\\n        self.active = False\\n        # Logic to reset the simulation's\
  \ internal state was here\\n\\n# We instantiate a global state object to be shared across modules\\nsimulation_state = SimulationState()\\\
  n\"\n}\n```"
